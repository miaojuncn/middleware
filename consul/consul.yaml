apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-server
  namespace: middleware
spec:
  serviceName: consul-server
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: consul
      component: server
  template:
    metadata:
      labels:
        app: consul
        component: server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                      - server
              topologyKey: kubernetes.io/hostname
      containers:
        - name: consul-server
          image: hashicorp/consul:1.13.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8500
              name: http
              protocol: TCP
            - containerPort: 8503
              name: grpc
              protocol: TCP
            - containerPort: 8301
              name: serflan-tcp
              protocol: TCP
            - containerPort: 8301
              name: serflan-udp
              protocol: UDP
            - containerPort: 8302
              name: serfwan-tcp
              protocol: TCP
            - containerPort: 8302
              name: serfwan-udp
              protocol: UDP
            - containerPort: 8300
              name: server
              protocol: TCP
            - containerPort: 8600
              name: dns-tcp
              protocol: TCP
            - containerPort: 8600
              name: dns-udp
              protocol: UDP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: CONSUL_DISABLE_PERM_MGMT
              value: "true"
          command:
            - "/bin/sh"
            - "-ec"
            - |
              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -server \
                -advertise="${POD_IP}" \
                -bind=0.0.0.0 \
                -bootstrap-expect=3 \
                -datacenter=dc1 \
                -data-dir=/consul/data \
                -retry-join=consul-server.${NAMESPACE}.svc:8301 \
                -client=0.0.0.0 \
                -domain=consul \
                -ui
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -ec
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 5
          volumeMounts:
            - name: data-consul
              mountPath: /consul/data
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
  volumeClaimTemplates:
    - metadata:
        name: data-consul
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: alibabacloud-cnfs-nas
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: consul
    component: server
  name: consul-server
  namespace: middleware
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8500
      protocol: TCP
      targetPort: 8500
    - name: grpc
      port: 8503
      protocol: TCP
      targetPort: 8503
    - name: serflan-tcp
      port: 8301
      protocol: TCP
      targetPort: 8301
    - name: serflan-udp
      port: 8301
      protocol: UDP
      targetPort: 8301
    - name: serfwan-tcp
      port: 8302
      protocol: TCP
      targetPort: 8302
    - name: serfwan-udp
      port: 8302
      protocol: UDP
      targetPort: 8302
    - name: server
      port: 8300
      protocol: TCP
      targetPort: 8300
    - name: dns-tcp
      port: 8600
      protocol: TCP
      targetPort: dns-tcp
    - name: dns-udp
      port: 8600
      protocol: UDP
      targetPort: dns-udp
  publishNotReadyAddresses: true
  selector:
    app: consul
    component: server
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: consul
    component: dns
  name: consul-dns
  namespace: middleware
spec:
  ports:
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: dns-tcp
    - name: dns-udp
      port: 53
      protocol: UDP
      targetPort: dns-udp
  selector:
    app: consul
    hasDNS: "true"
  type: ClusterIP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: consul
    component: client
  name: consul-client
  namespace: middleware
spec:
  selector:
    matchLabels:
      app: consul
      component: client
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        component: client
        hasDNS: "true"
    spec:
      containers:
        - command:
            - "/bin/sh"
            - "-ec"
            - |
              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -node="${NODE}" \
                -advertise="${POD_IP}" \
                -bind=0.0.0.0 \
                -client=0.0.0.0 \
                -node-meta=host-ip:${HOST_IP} \
                -node-meta=pod-name:${HOSTNAME} \
                -hcl='leave_on_terminate = true' \
                -hcl='ports { grpc = 8502 }' \
                -config-dir=/consul/config \
                -datacenter=dc1 \
                -data-dir=/consul/data \
                -retry-join="consul-server-0.consul-server.${NAMESPACE}.svc:8301" \
                -retry-join="consul-server-1.consul-server.${NAMESPACE}.svc:8301" \
                -retry-join="consul-server-2.consul-server.${NAMESPACE}.svc:8301" \
                -domain=consul
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: NODE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: CONSUL_DISABLE_PERM_MGMT
              value: "true"
          image: hashicorp/consul:1.13.2
          imagePullPolicy: IfNotPresent
          name: consul-client
          ports:
            - containerPort: 8500
              hostPort: 8500
              name: http
              protocol: TCP
            - containerPort: 8502
              hostPort: 8502
              name: grpc
              protocol: TCP
            - containerPort: 8301
              name: serflan-tcp
              protocol: TCP
            - containerPort: 8301
              name: serflan-udp
              protocol: UDP
            - containerPort: 8600
              name: dns-tcp
              protocol: TCP
            - containerPort: 8600
              name: dns-udp
              protocol: UDP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -ec
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            periodSeconds: 10
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /consul/login
              name: consul-data
              readOnly: true
            - mountPath: /consul/data
              name: data
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      volumes:
        - emptyDir: { }
          name: data
        - emptyDir:
            medium: Memory
          name: consul-data
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: consul
#     component: ui
#   name: consul-ui
#   namespace: consul
# spec:
#   ports:
#     - name: http
#       port: 80
#       protocol: TCP
#       targetPort: 8500
#   selector:
#     app: consul
#     component: server
#   type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: consul-ui
  namespace: middleware
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
    - hosts:
        - "csl.devops.rivtower.com"
      secretName: consul-tls
  rules:
    - host: csl.devops.rivtower.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: consul-server
                port:
                  name: http